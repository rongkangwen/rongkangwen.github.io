(window.webpackJsonp=window.webpackJsonp||[]).push([[100],{589:function(e,v,t){"use strict";t.r(v);var _=t(22),o=Object(_.a)({},(function(){var e=this,v=e.$createElement,t=e._self._c||v;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"修改dom"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#修改dom"}},[e._v("#")]),e._v(" 修改DOM")]),e._v(" "),t("h2",{attrs:{id:"特性和属性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#特性和属性"}},[e._v("#")]),e._v(" 特性和属性")]),e._v(" "),t("ul",[t("li",[e._v("特性（attribute）—— 写在HTML中的内容")]),e._v(" "),t("li",[e._v("属性（property)  —— DOM对象中的内容")])]),e._v(" "),t("p",[e._v("操作属性的方法：")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("elem.hasAttribute(name)")]),e._v(" —— 检查是否存在这个特性")]),e._v(" "),t("li",[t("code",[e._v("elem.getAttribute(name)")]),e._v(" —— 获取这个特性值")]),e._v(" "),t("li",[t("code",[e._v("elem.setAttribute(name,value)")]),e._v(" —— 设置这个特性值")]),e._v(" "),t("li",[t("code",[e._v("elem.removeAttribute(name)")]),e._v(" —— 移除这个特性")]),e._v(" "),t("li",[t("code",[e._v("elem.attributes")]),e._v(" —— 所有特性的集合")])]),e._v(" "),t("p",[e._v("在大多数情况下，最好使用 DOM 属性。仅当 DOM 属性无法满足开发需求，并且我们真的需要特性时，才使用特性，例如：")]),e._v(" "),t("ul",[t("li",[e._v("我们需要一个非标准的特性。但是如果它以 data- 开头，那么我们应该使用 dataset。")]),e._v(" "),t("li",[e._v("我们想要读取 HTML 中“所写的”值。对应的 DOM 属性可能不同，例如 href 属性一直是一个 完整的 URL，但是我们想要的是“原始的”值")])]),e._v(" "),t("h2",{attrs:{id:"创建新节点的方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建新节点的方法"}},[e._v("#")]),e._v(" 创建新节点的方法")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("document.createElement(tag)")]),e._v(" — 用给定的标签创建一个元素节点，")]),e._v(" "),t("li",[t("code",[e._v("document.createTextNode(value)")]),e._v(" — 创建一个文本节点（很少使用），")]),e._v(" "),t("li",[t("code",[e._v("elem.cloneNode(deep)")]),e._v(" — 克隆元素，如果 deep==true 则与其后代一起克隆")])]),e._v(" "),t("h2",{attrs:{id:"插入和移除节点的方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#插入和移除节点的方法"}},[e._v("#")]),e._v(" 插入和移除节点的方法")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("node.append(...nodes or strings)")]),e._v(" — 在 node 末尾插入，")]),e._v(" "),t("li",[t("code",[e._v("node.prepend(...nodes or strings)")]),e._v(" — 在 node 开头插入，")]),e._v(" "),t("li",[t("code",[e._v("node.before(...nodes or strings)")]),e._v(" — 在 node 之前插入，")]),e._v(" "),t("li",[t("code",[e._v("node.after(...nodes or strings)")]),e._v(" — 在 node 之后插入，")]),e._v(" "),t("li",[t("code",[e._v("node.replaceWith(...nodes or strings)")]),e._v(" — 替换 node。")]),e._v(" "),t("li",[t("code",[e._v("node.remove()")]),e._v(" — 移除 node\n文本字符串被“作为文本”插入。")])]),e._v(" "),t("p",[e._v("这里还有“旧式”的方法：")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("parent.appendChild(node)")])]),e._v(" "),t("li",[t("code",[e._v("parent.insertBefore(node, nextSibling)")])]),e._v(" "),t("li",[t("code",[e._v("parent.removeChild(node)")])]),e._v(" "),t("li",[t("code",[e._v("parent.replaceChild(newElem, node)")])])]),e._v(" "),t("p",[e._v("这些方法都返回 node。")]),e._v(" "),t("p",[e._v("在 html 中给定一些 HTML，"),t("code",[e._v("elem.insertAdjacentHTML(where, html)")]),e._v(" 会根据 where 的值来插入它：")]),e._v(" "),t("ul",[t("li",[t("code",[e._v('"beforebegin"')]),e._v(" — 将 html 插入到 elem 前面，")]),e._v(" "),t("li",[t("code",[e._v('"afterbegin"')]),e._v(" — 将 html 插入到 elem 的开头，")]),e._v(" "),t("li",[t("code",[e._v('"beforeend"')]),e._v(" — 将 html 插入到 elem 的末尾，")]),e._v(" "),t("li",[t("code",[e._v('"afterend"')]),e._v(" — 将 html 插入到 elem 后面。")])]),e._v(" "),t("p",[e._v("另外，还有类似的方法，"),t("code",[e._v("elem.insertAdjacentText")]),e._v(" 和 "),t("code",[e._v("elem.insertAdjacentElement")]),e._v("，它们会插入文本字符串和元素，但很少使用。")]),e._v(" "),t("p",[e._v("要在页面加载完成之前将 HTML 附加到页面：")]),e._v(" "),t("p",[t("code",[e._v("document.write(html)")]),e._v("\n页面加载完成后，这样的调用将会擦除文档。多见于旧脚本")])])}),[],!1,null,null,null);v.default=o.exports}}]);