(window.webpackJsonp=window.webpackJsonp||[]).push([[88],{577:function(t,r,s){"use strict";s.r(r);var a=s(22),e=Object(a.a)({},(function(){var t=this,r=t.$createElement,s=t._self._c||r;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"错误处理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#错误处理"}},[t._v("#")]),t._v(" 错误处理")]),t._v(" "),s("p",[s("code",[t._v("try..catch")]),t._v(" 结构允许我们处理执行过程中出现的 "),s("code",[t._v("error")]),t._v("。从字面上看，它允许“尝试”运行代码并“捕获”其中可能发生的错误。")]),t._v(" "),s("p",[t._v("语法如下：")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 执行此处代码")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果发生错误，跳转至此处")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// err 是一个 error 对象")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 无论怎样都会在 try/catch 之后执行")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br")])]),s("p",[t._v("这儿可能会没有 "),s("code",[t._v("catch")]),t._v(" 部分或者没有 "),s("code",[t._v("finally")]),t._v("，所以 "),s("code",[t._v("try..catch")]),t._v(" 或 "),s("code",[t._v("try..finally")]),t._v(" 都是可用的。")]),t._v(" "),s("p",[t._v("Error 对象包含下列属性:")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("message")]),t._v(" — 人类可读的 error 信息。")]),t._v(" "),s("li",[s("code",[t._v("name")]),t._v(" — 具有 error 名称的字符串（Error 构造器的名称）。")]),t._v(" "),s("li",[s("code",[t._v("stack")]),t._v("（没有标准，但得到了很好的支持）— Error 发生时的调用栈")])]),t._v(" "),s("p",[t._v("我们也可以使用 "),s("code",[t._v("throw")]),t._v(" 操作符来生成自定义的 "),s("code",[t._v("error")]),t._v("。从技术上讲，"),s("code",[t._v("throw")]),t._v(" 的参数可以是任何东西，但通常是继承自内建的 "),s("code",[t._v("Error")]),t._v(" 类的 "),s("code",[t._v("error")]),t._v(" 对象。")]),t._v(" "),s("p",[t._v("再次抛出（rethrowing）是一种错误处理的重要模式："),s("code",[t._v("catch")]),t._v(" 块通常期望并知道如何处理特定的 "),s("code",[t._v("error")]),t._v(" 类型，因此它应该再次抛出它不知道的 "),s("code",[t._v("error")]),t._v("。")]),t._v(" "),s("p",[t._v("即使我们没有 "),s("code",[t._v("try..catch")]),t._v("，大多数执行环境也允许我们设置“全局”错误处理程序来捕获“掉出（fall out）”的 error。在浏览器中，就是 "),s("code",[t._v("window.onerror")]),t._v("。")])])}),[],!1,null,null,null);r.default=e.exports}}]);